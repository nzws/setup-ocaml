name: Builds, tests & co

on:
  pull_request:
  push:
  schedule:
    # Prime the caches every Monday
    - cron: 0 1 * * MON

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
# Concurrent workflows are grouped by the PR or branch that triggered them
# (github.ref) and the name of the workflow (github.workflow). The
# 'cancel-in-progress' option then make sure that only one workflow is running
# at a time. This doesn't prevent new jobs from running, rather it cancels
# already running jobs before scheduling new jobs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name == 'pull_request' || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  hygiene:
    name: Hygiene

    runs-on: ubuntu-latest

    steps:
      - name: Checkout tree
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Set-up Node.js 20
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: 20

      - name: Get yarn cache folder path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >>"$GITHUB_OUTPUT"

      - name: Retrieve yarn cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install npm packages
        run: yarn install --immutable

      - name: Check formatting
        if: always()
        run: yarn format:check

      - name: Check lint
        if: always()
        run: yarn lint

      - name: Check type
        if: always()
        run: yarn typecheck

      - name: Ensure dist directory is up-to-date
        shell: bash
        run: |
          yarn build
          if [ "$(git status dist lint-doc lint-fmt lint-opam --porcelain | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

  test:
    name: Test

    needs: hygiene

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        ocaml-compiler:
          - "5.1"
        include:
          - os: windows-latest
            ocaml-compiler: "4.14"
          - os: ubuntu-latest
            ocaml-compiler: ocaml-variants.5.1.0+options,ocaml-option-flambda,ocaml-option-musl,ocaml-option-static

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tree
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Set-up OCaml ${{ matrix.ocaml-compiler }}
        uses: ./
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: ${{ matrix.os != 'windows-latest' }}

      - run: opam depext --install uri

      - run: opam install ocamlbuild
